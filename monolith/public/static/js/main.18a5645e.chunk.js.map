{"version":3,"sources":["pages/Products/index.js","pages/Orders/index.js","components/ClippedDrawer/index.js","App.js","serviceWorker.js","index.js"],"names":["useStyles","makeStyles","theme","root","flexGrow","paper","padding","spacing","media","height","paddingTop","Products","classes","useState","hasErrors","setErrors","products","setProducts","a","fetch","json","then","response","console","log","catch","err","useEffect","fetchData","className","Paper","Typography","component","Grid","container","justify","alignItems","map","product","key","id","item","md","xs","Card","onClick","CardMedia","image","picture","title","name","CardContent","variant","cost","overflowX","table","minWidth","Orders","orders","setOrders","fetchOrders","Table","TableHead","TableRow","TableCell","TableBody","order","hover","scope","date","items","length","display","appBar","zIndex","drawer","logo","maxHeight","marginRight","width","flexShrink","drawerPaper","drawerItem","color","content","toolbar","mixins","ClippedDrawer","CssBaseline","AppBar","position","Toolbar","noWrap","Drawer","List","ListItem","NavLink","exact","activeClassName","to","ListItemText","primary","path","createMuiTheme","App","ThemeProvider","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.18a5645e.chunk.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Card from \"@material-ui/core/Card\";\nimport CardMedia from \"@material-ui/core/CardMedia\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Typography from \"@material-ui/core/Typography\";\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    flexGrow: 1\n  },\n  paper: {\n    padding: theme.spacing(3, 2)\n  },\n  media: {\n    height: 0,\n    paddingTop: \"56.25%\" // 16:9\n  }\n}));\n\nexport default function Products() {\n  const classes = useStyles();\n\n  const [hasErrors, setErrors] = useState(true);\n  const [products, setProducts] = useState([]);\n\n  async function fetchData() {\n    const response = await fetch(\"http://localhost:8080/api/products\");\n    response\n      .json()\n      .then(response => {\n        console.log(response);\n        setProducts(response);\n      })\n      .catch(err => setErrors(true));\n  }\n\n  useEffect(() => {\n    fetchData();\n  }, []);\n\n  return (\n    <div className={classes.root}>\n      {hasErrors && (\n        <Paper className={classes.paper}>\n          <Typography component=\"p\">\n            An error has occurred, please try reloading the page.\n          </Typography>\n        </Paper>\n      )}\n      {!hasErrors && (\n        <Grid container spacing={3} justify=\"flex-start\" alignItems=\"stretch\">\n          {products.map(product => {\n            return (\n              <Grid key={product.id} item md={4} xs={12}>\n                <Card\n                  onClick={() => {\n                    console.log(\"Clicked card\");\n                  }}\n                >\n                  <CardMedia\n                    className={classes.media}\n                    image={product.picture}\n                    title={product.name}\n                  />\n                  <CardContent>\n                    <Typography variant=\"body1\">\n                      {product.name} - ${product.cost}\n                    </Typography>\n                  </CardContent>\n                </Card>\n              </Grid>\n            );\n          })}\n        </Grid>\n      )}\n    </div>\n  );\n}\n","import React, { useState, useEffect } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Typography from \"@material-ui/core/Typography\";\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    flexGrow: 1,\n    overflowX: \"auto\"\n  },\n  paper: {\n    padding: theme.spacing(3, 2)\n  },\n  table: {\n    minWidth: 650\n  }\n}));\n\nexport default function Orders() {\n  const classes = useStyles();\n\n  const [hasErrors, setErrors] = useState(true);\n  const [orders, setOrders] = useState([]);\n\n  async function fetchOrders() {\n    const response = await fetch(\"http://localhost:8081/api/orders\");\n    response\n      .json()\n      .then(response => {\n        console.log(response);\n        setOrders(response);\n      })\n      .catch(err => setErrors(true));\n  }\n\n  useEffect(() => {\n    fetchOrders();\n  }, []);\n\n  return (\n    <div className={classes.root}>\n      {hasErrors && (\n        <Paper className={classes.paper}>\n          <Typography component=\"p\">\n            An error has occurred, please try reloading the page.\n          </Typography>\n        </Paper>\n      )}\n      {!hasErrors && (\n        <Paper>\n          <Table className={classes.table}>\n            <TableHead>\n              <TableRow>\n                <TableCell>Order Id</TableCell>\n                <TableCell>Date</TableCell>\n                <TableCell>Total Items</TableCell>\n                <TableCell>Cost</TableCell>\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {orders.map(order => (\n                <TableRow\n                  hover\n                  key={order.id}\n                  onClick={() => {\n                    console.log(\"load order details\");\n                  }}\n                >\n                  <TableCell component=\"th\" scope=\"row\">\n                    {order.id}\n                  </TableCell>\n                  <TableCell>{order.date}</TableCell>\n                  <TableCell>\n                    {(order.items && order.items.length) || 0}\n                  </TableCell>\n                  <TableCell>${order.cost}</TableCell>\n                </TableRow>\n              ))}\n            </TableBody>\n          </Table>\n        </Paper>\n      )}\n    </div>\n  );\n}\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Drawer from \"@material-ui/core/Drawer\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport List from \"@material-ui/core/List\";\nimport Typography from \"@material-ui/core/Typography\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\n\nimport { BrowserRouter as Router, Route, NavLink } from \"react-router-dom\";\n\n//Import Pages\nimport Products from \"../../pages/Products\";\nimport Orders from \"../../pages/Orders\";\n\nconst drawerWidth = 200;\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    display: \"flex\"\n  },\n  appBar: {\n    zIndex: theme.zIndex.drawer + 1\n  },\n  logo: {\n    maxHeight: \"60px\",\n    marginRight: theme.spacing(1)\n  },\n  drawer: {\n    width: drawerWidth,\n    flexShrink: 0\n  },\n  drawerPaper: {\n    width: drawerWidth\n  },\n  drawerItem: {\n    color: \"rgba(0, 0, 0, 0.54)\"\n  },\n  content: {\n    flexGrow: 1,\n    padding: theme.spacing(3)\n  },\n  toolbar: theme.mixins.toolbar\n}));\n\nexport default function ClippedDrawer() {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.root}>\n      <Router>\n        <CssBaseline />\n        <AppBar position=\"fixed\" className={classes.appBar}>\n          <Toolbar>\n            <Typography variant=\"h6\" noWrap>\n              Fancy Store\n            </Typography>\n          </Toolbar>\n        </AppBar>\n        <Drawer\n          className={classes.drawer}\n          variant=\"permanent\"\n          classes={{\n            paper: classes.drawerPaper\n          }}\n        >\n          <div className={classes.toolbar} />\n          <List>\n            <ListItem\n              component={NavLink}\n              exact\n              className={classes.drawerItem}\n              activeClassName=\"Mui-selected\"\n              to=\"/\"\n            >\n              <ListItemText primary=\"Home\" />\n            </ListItem>{\" \"}\n            <ListItem\n              component={NavLink}\n              className={classes.drawerItem}\n              activeClassName=\"Mui-selected\"\n              to=\"/orders\"\n            >\n              <ListItemText primary=\"Orders\" />\n            </ListItem>\n          </List>\n        </Drawer>\n        <main className={classes.content}>\n          <div className={classes.toolbar} />\n          <Route exact path=\"/\" component={Products} />\n          <Route path=\"/orders\" component={Orders} />\n        </main>\n      </Router>\n    </div>\n  );\n}\n","import React from \"react\";\nimport \"./App.css\";\n\nimport ClippedDrawer from \"./components/ClippedDrawer\";\n\nimport { ThemeProvider } from \"@material-ui/styles\";\nimport { createMuiTheme } from \"@material-ui/core/styles\";\n\nconst theme = createMuiTheme({});\n\nfunction App() {\n  return (\n    <ThemeProvider theme={theme}>\n      <ClippedDrawer />\n    </ThemeProvider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}